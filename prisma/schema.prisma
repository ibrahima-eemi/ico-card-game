datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          String   @id @default(uuid())
  email       String   @unique
  username    String
  password    String
  createdAt   DateTime @default(now())
  players     Player[]
  hostedRooms Room[]   @relation("HostRooms")
  sessions    Session?
  rooms       Room[]   @relation("PlayerRooms")
}

model Room {
  id        String     @id @default(uuid())
  sessionId String?    @unique
  hostId    String
  status    RoomStatus @default(WAITING)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  players   Player[]
  host      User       @relation("HostRooms", fields: [hostId], references: [id], onDelete: Cascade)
  members   User[]     @relation("PlayerRooms")
}

model Player {
  id        String   @id @default(uuid())
  name      String
  role      String
  roomId    String
  userId    String
  isReady   Boolean  @default(false)
  createdAt DateTime @default(now())
  room      Room     @relation(fields: [roomId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Session {
  id        String   @id @default(uuid())
  userId    String   @unique
  token     String   @unique
  createdAt DateTime @default(now())
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Card {
  id          String   @id @default(uuid())
  name        String
  description String?
  type        String
  effect      Json
  createdAt   DateTime @default(now())
}

enum RoomStatus {
  WAITING
  IN_PROGRESS
  FINISHED
}
