datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model BugReport {
  id          BigInt   @id @default(autoincrement())
  user        String?  @db.VarChar
  email       String?  @db.VarChar
  subject     String?  @db.VarChar(50)
  description String?
  priority    String?  @db.VarChar
  created_at  DateTime @default(now()) @db.Timestamptz(6)
}

model Card {
  id          String   @id
  name        String
  description String?
  type        String
  effect      Json
  createdAt   DateTime @default(now())
}

model Player {
  id        String   @id
  name      String
  role      String
  roomId    String
  userId    String
  isReady   Boolean  @default(false)
  createdAt DateTime @default(now())
  Room      Room     @relation(fields: [roomId], references: [id], onDelete: Cascade)
}

model Room {
  id          String        @id
  sessionId   String?       @unique
  hostId      String
  status      RoomStatus    @default(WAITING)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime
  Player      Player[]
  PlayerRooms PlayerRooms[]
}

model Session {
  id        String   @id
  userId    String   @unique
  token     String   @unique
  createdAt DateTime @default(now())
  expiresAt DateTime
}

model User_Admin {
  id              String   @id
  name            String
  email           String   @unique
  profile_picture String?
  status          String   @default("active")
  created_at      DateTime @default(now())
}

model PlayerRooms {
  A    String
  B    String
  Room Room   @relation(fields: [A], references: [id], onDelete: Cascade)

  @@id([A, B], map: "_PlayerRooms_AB_pkey")
  @@index([B], map: "_PlayerRooms_B_index")
  @@map("_PlayerRooms")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model users {
  id              String    @id @db.Uuid
  email           String?   @unique
  role            String?   @default("user")
  profile_picture String?
  status          String?   @default("active")
  created_at      DateTime? @default(now()) @db.Timestamp(6)
}

enum RoomStatus {
  WAITING
  IN_PROGRESS
  FINISHED
}
